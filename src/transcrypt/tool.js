'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,
hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="__main__";export var sample_is_defined=dict({"ACL":dict({"delete_ace":true,"set_acl":true,"set_acl_ace":true}),"BGP":dict({"config_bgp_globals":true,"config_bgp_globals_vrf":true,"config_bgp_neighbor":true,"config_bgp_neighbor_group":true}),
"Bundles":dict({"get_bundle":true,"get_lc_slots":true,"set_bundle_interface":true,"set_bundle_interfaces":true}),"DHCP":dict({"config_agent_interface_ipv4":true,"config_agent_interface_ipv6":true,"config_helperaddress_ipv4":true,"set_relay_helper_dhcpv6":true,"unset_dhcp_ipv4":true,"unset_dhcp_ipv6":true,"unset_relay_helper_dhcpv6":true,"get_dhcp_ipv4_relay_statistics":false,"get_v6_relay_binding_count":false}),"EVPN":dict({"add_esi":true,"add_evi":true,"add_interface_convergence":true,"add_interface_hrw":true,
"delete_evi":true,"delete_interface_hrw":true,"set_BVIIntf":true,"get_evpn_ethernet_segment_carving_detail":false,"get_evpn_ethernet_segment_interface_detail":false,"remove_evpn_loadbalancing":false}),"Forwarding":dict({"config_cef_adjacency":true,"delete_vrf":true,"get_vrf_data":true}),"L2":dict({"get_cfm_summary":true,"set_ethernet_cfm_domain_level":true,"set_ethernet_sla_profile":true,"set_interface_ethernet_cfm":true}),"L2VPN":dict({"get_bridge_domain":true,"remove_bridge_group":true,"remove_l2vpn":true,
"remove_xconnect_group":true,"set_bridge_group":true,"set_evpn_vpws":true,"set_flexiblexconnect":true,"set_xconnect":true,"unset_xconnect":true,"get_l2vpn_flexible_xconnect_service_detail":false}),"Multicast":dict({"set_pim_config":true,"set_static_group":true,"set_acl_config":false}),"PI Infra":dict({"delete_interface":true,"get_interface_accounting":true,"get_interfaces_brief":true,"get_process_info":true,"get_show_interfaces_summary":true,"set_bundle_id":true,"set_config":true,"set_l2_transport":true,
"set_rewrite_ingress_tag_pop":true,"set_vlan_config":true,"unset_rewrite_ingress_tag_translate":true,"set_rewrite_ingress_tag_translate":false}),"Platform":dict({"create_interfaces":true,"get_lc_locations":true,"get_rp_locations":true})});export var sample_duplicated=dict({"add_bundle_interface":["Bundles","PI Infra"],"add_interface":["EVPN","PI Infra"],"add_source":["EVPN","PI Infra"],"get_interface":["ACL","L2VPN","MPLS TE","Multicast","PI Infra"],"get_interfaces":["PI Infra","Platform"],"remove_interface":["EVPN",
"MPLS LDP"],"set_vrf":["Forwarding","PI Infra"]});export var sub_AP_method_test=function(file1,file2){return[sample_is_defined,sample_duplicated]};

//# sourceMappingURL=tool.map